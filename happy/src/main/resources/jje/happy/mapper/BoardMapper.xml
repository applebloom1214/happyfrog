<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jje.happy.mapper.BoardMapper">


	<!-- cdta xml에서 부등호를 사용하기 위함 -->
	<select id="getList" resultType="jje.happy.vo.BoardVO">
	<![CDATA[
		select * from happy_board where bno > 0 
		]]>
	</select>

	<insert id="insert">
		insert into happy_member(userid, userpw, username)
		values (#{userid},#{userpw},#{userName})
	</insert>
	
	<insert id="insertAuth">
		insert into happy_member_auth (userid, auth)
		values (#{userid},'ROLE_USER')
	</insert>
	
    <select id="idCheck" resultType="jje.happy.vo.MemberVO">
		select * from happy_member where userid = #{userid}
	</select>
	
	<insert id="sign">
		insert into happy_board (bno,title,content,writer)
		values (seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>

	<insert id="insertSelectKey">

		<selectKey keyProperty="bno" order="BEFORE"
			resultType="long">
			select seq_board.nextval from dual <!-- pk 값을 미리(before) sql을 통해서 처리해둔다. -->
		</selectKey>

		insert into happy_board (bno,title,content, writer)
		values (#{bno},
		#{title}, #{content}, #{writer})
	</insert>

	<select id="read" resultType="jje.happy.vo.BoardVO">
		select * from happy_board where bno = #{bno}
	</select>
	
	<delete id="delete">
		delete happy_board where bno = #{bno}
	</delete>

	<update id="update">
		update happy_board
		set title= #{title},
		content=#{content},
		writer = #{writer},
		updateDate = sysdate
		where bno =#{bno}
	</update>
	
		<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR"> <!-- 맨뒤의 or을 제거해줌 -->
			<foreach item='type' collection="typeArr">
				<trim prefix="OR"> <!-- 맨앞에 or을 추가 -->
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>
	
	
<select id="getListWithPaging" resultType="jje.happy.vo.BoardVO">
  <![CDATA[
  select 
    bno, title, content, writer, regdate, updatedate, replycnt
  from 
      (
      select /*+INDEX_DESC(happy_board pk_board) */
        rownum rn, bno, title, content, writer, regdate, updatedate, replycnt 
      from 
        happy_board
      where 
  ]]>

  <include refid="criteria"></include> 
      
  <![CDATA[    
      rownum <= #{pageNum} * #{amount}
      )
  where rn > (#{pageNum} -1) * #{amount}   
  ]]>
  </select>
  
  <select id="getListWithPagingScore" resultType="jje.happy.vo.BoardVO">
 
select happy_board.*
from(
select rownum AS row_num, happy_board.*
from(
select happy_board.*
from happy_board
order by totalscore desc NULLS last
)happy_board
)happy_board
where row_num between 1 and 10
  
  </select>
  
    <select id="getListWithPagingReplyCnt" resultType="jje.happy.vo.BoardVO">
  
select happy_board.*
from(
select rownum AS row_num, happy_board.*
from(
select happy_board.*
from happy_board
order by replycnt desc NULLS last
)happy_board
)happy_board
where row_num between 1 and 10
  </select>
  
  
	
		<select id="getTotalCount" resultType="int">
		select count(*) from happy_board where 
		
		<include refid="criteria"></include> 
		
		bno > 0
		
	</select>
	
	  <update id="updateReplyCnt">
    update happy_board set replycnt = replycnt + #{amount} where bno = #{bno}
  </update>  
	
   <update id="updatetotalscore">
    update happy_board set totalscore = totalscore + #{score} where bno = #{bno}
  </update> 
  
    <update id="updateaverscore">
    update happy_board set averscore = totalscore / #{replycnt} where bno = #{bno}
  </update> 
  
  		
  		<select id="getReplyCnt" resultType="int">
		select replycnt from happy_board where bno = #{bno}
		
	</select>		
  		
</mapper>
